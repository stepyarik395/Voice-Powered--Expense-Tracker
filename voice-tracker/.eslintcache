[{"C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\index.js":"1","C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\App.js":"2","C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\components\\Details\\Details.jsx":"3","C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\styles.js":"4","C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\components\\Main\\Main.jsx":"5","C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\components\\Main\\styles.js":"6","C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\components\\Details\\styles.js":"7","C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\components\\Main\\Form\\Form.jsx":"8","C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\components\\Main\\Form\\styles.js":"9","C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\components\\Main\\List\\List.jsx":"10","C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\components\\Main\\List\\styles.js":"11","C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\context\\context.js":"12","C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\context\\contextReducer.js":"13","C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\constants\\categories.js":"14","C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\utils\\format.Date.js":"15","C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\useTransactions.js":"16"},{"size":428,"mtime":1611149221014,"results":"17","hashOfConfig":"18"},{"size":1031,"mtime":1611215502780,"results":"19","hashOfConfig":"18"},{"size":668,"mtime":1611137934257,"results":"20","hashOfConfig":"18"},{"size":582,"mtime":1608713377820,"results":"21","hashOfConfig":"18"},{"size":1247,"mtime":1611222503096,"results":"22","hashOfConfig":"18"},{"size":514,"mtime":1608729740406,"results":"23","hashOfConfig":"18"},{"size":240,"mtime":1608794603541,"results":"24","hashOfConfig":"18"},{"size":4792,"mtime":1611218828222,"results":"25","hashOfConfig":"18"},{"size":247,"mtime":1608794588743,"results":"26","hashOfConfig":"18"},{"size":1488,"mtime":1609829265868,"results":"27","hashOfConfig":"18"},{"size":416,"mtime":1608797009160,"results":"28","hashOfConfig":"18"},{"size":1095,"mtime":1611224515397,"results":"29","hashOfConfig":"18"},{"size":559,"mtime":1611219646746,"results":"30","hashOfConfig":"18"},{"size":1765,"mtime":1609749196939,"results":"31","hashOfConfig":"18"},{"size":317,"mtime":1611044877541,"results":"32","hashOfConfig":"18"},{"size":1511,"mtime":1611139429751,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"egv36c",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\index.js",[],["69","70"],"C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\App.js",[],"C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\components\\Details\\Details.jsx",[],"C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\styles.js",[],"C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\components\\Main\\Main.jsx",[],"C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\components\\Main\\styles.js",[],"C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\components\\Details\\styles.js",[],"C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\components\\Main\\Form\\Form.jsx",["71"],"import React from 'react'\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport { useState , useContext, useEffect } from 'react';\r\nimport { ExpenseTrackerContext } from '../../../context/context'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport { incomeCategories, expenseCategories } from '../../../constants/categories'\r\nimport formatDate from '../../../utils/format.Date'\r\n\r\nconst initialState = {\r\n  amount: '',\r\n  category: '',\r\n  type: 'Income',\r\n  date: formatDate(new Date())\r\n}\r\nconst Form = () => {\r\n  const classes = useStyles();\r\n  const [formdate, setFormDate] = useState(initialState)\r\n  const selectedCategories = formdate.type === 'Income' ? incomeCategories : expenseCategories; \r\n  const { addTransaction } = useContext(ExpenseTrackerContext)\r\n  const { segment } = useSpeechContext();\r\n\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formdate.amount)) || !formdate.date.includes('-')) return;\r\n    const transaction = {\r\n      ...formdate,\r\n      amount: Number(formdate.amount),\r\n      id: uuidv4()\r\n    }\r\n    addTransaction(transaction)\r\n    setFormDate(initialState)\r\n  }\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === 'add_expense') {\r\n        setFormDate({...formatDate, type:'Expanse'})\r\n      } else if (segment.intent.intent === 'add_income') {\r\n        setFormDate({...formatDate, type:'Income'})\r\n      } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\r\n        return createTransaction()\r\n      } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\r\n        return setFormDate(initialState)\r\n      }\r\n      segment.entities.forEach((e) => {\r\n        const category = `${e.value.charAt(0)}${e.value.slice(1).toLowerCase()}`\r\n        switch (e.type) {\r\n          case 'amount':\r\n            setFormDate({ ...formdate, amount: e.value });\r\n            break;\r\n          case 'category':\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormDate({ ...formdate, type: 'Income', category });\r\n            } else if ((expenseCategories.map((iC) => iC.type).includes(category))) {\r\n              setFormDate({ ...formdate, type: 'Expance', category });\r\n            }\r\n            break;\r\n          case 'date':\r\n            setFormDate({ ...formdate, date: e.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n      if (segment.isFinal && formdate.amount && formdate.category && formdate.type && formdate.formatDate) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment])\r\n  \r\n  return (\r\n    <div>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Typography gutterBottom align=\"center\" variant=\"subtitle2\">\r\n            {segment && segment.words.map((w)=> w.value).join(\" \")}\r\n          </Typography>\r\n          <Grid item xs={12}>\r\n            <FormControl fullWidth>\r\n              <InputLabel>Type</InputLabel>\r\n              <Select value={formdate.type} onChange={(e) => {\r\n                setFormDate({\r\n                  ...formdate,\r\n                  type: e.target.value\r\n                })\r\n              }}>\r\n                <MenuItem value=\"Income\">Income</MenuItem>\r\n                <MenuItem value=\"Expanse\">Expense</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <FormControl fullWidth>\r\n              <InputLabel>Category</InputLabel>\r\n              <Select value={formdate.category} onChange={(e) => {\r\n                 setFormDate({\r\n                  ...formdate,\r\n                  category: e.target.value\r\n                })\r\n              }} >\r\n                 {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        <Grid item xs={12}>\r\n            <TextField type=\"number\" label=\"amount\" fullWidth value={formdate.amount} onChange={(e) => {\r\n              setFormDate({\r\n                ...formdate,\r\n                amount: e.target.value\r\n              })\r\n            }} />\r\n            <TextField type=\"date\" fullWidth defaultValue={formdate.date} onChange={(e) => {\r\n              setFormDate({\r\n                ...formdate,\r\n                date: formatDate(e.target.value)\r\n              })\r\n            }}  />\r\n          <Button fullWidth color=\"primary\" className={classes.button} variant=\"outlined\" onClick={createTransaction}>Create</Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\components\\Main\\Form\\styles.js",[],"C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\components\\Main\\List\\List.jsx",[],"C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\components\\Main\\List\\styles.js",[],"C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\context\\context.js",[],"C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\context\\contextReducer.js",[],"C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\constants\\categories.js",[],"C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\utils\\format.Date.js",["72"],"export default (date) => {\r\n  const d = new Date(date);\r\n  let month = `${d.getMonth() + 1}`;\r\n  let day = `${d.getDate()}`;\r\n  const year = d.getFullYear();\r\n\r\n  if (month.length < 2) {\r\n    month = `0${month}`;\r\n  }\r\n  if (day.length < 2) {\r\n    day = `0${day}`;\r\n  }\r\n\r\n  return [year, month, day].join('-');\r\n};\r\n","C:\\Users\\SMA\\Desktop\\personal\\voice-tracker\\Voice-Powered--Expense-Tracker\\voice-tracker\\src\\useTransactions.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":70,"column":6,"nodeType":"79","endLine":70,"endColumn":15,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":1,"nodeType":"83","endLine":15,"endColumn":3},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formdate'. Either include them or remove the dependency array. You can also do a functional update 'setFormDate(f => ...)' if you only need 'formdate' in the 'setFormDate' call.","ArrayExpression",["86"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [createTransaction, formdate, segment]",{"range":"89","text":"90"},[2754,2763],"[createTransaction, formdate, segment]"]